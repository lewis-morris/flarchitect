name: Publish to PyPI (on version bump)

on:
  push:
    branches: [ master ]

permissions:
  contents: read
  id-token: write  # <-- required for Trusted Publishing

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Detect version change
        id: v
        shell: bash
        run: |
          NEW_VERSION=$(python - <<'PY'
          import pathlib, tomllib
          print(tomllib.loads(pathlib.Path('pyproject.toml').read_text())['project']['version'])
          PY
          )
          OLD_VERSION=$(git show HEAD^:pyproject.toml 2>/dev/null | python - <<'PY' || true
          import sys, tomllib
          print(tomllib.loads(sys.stdin.read())['project']['version'])
          PY
          )
          echo "new=$NEW_VERSION" >> "$GITHUB_OUTPUT"
          echo "old=$OLD_VERSION" >> "$GITHUB_OUTPUT"

      - name: Stop if version unchanged
        if: steps.v.outputs.new == steps.v.outputs.old
        run: echo "No version bump (${ { steps.v.outputs.new } }) â€” skipping publish." && exit 0

      - name: Build sdist & wheel
        run: |
          python -m pip install --upgrade pip build
          python -m build

      - name: Publish to PyPI via OIDC
        if: steps.v.outputs.new != steps.v.outputs.old
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          print-hash: true
          packages-dir: dist